{"ast":null,"code":"var _jsxFileName = \"/Users/ryanyang/Repo/booqed-challenge/src/components/App.js\";\nimport React from 'react';\nimport SearchForm from './SearchForm';\nimport SearchResults from './SearchResults';\nimport BasicPagination from './BasicPagination';\nimport Spinner from './Spinner';\nimport axios from 'axios';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchResults: [],\n      page: 1,\n      term: '',\n      totalPages: 0,\n      loading: false\n    };\n\n    this.onSearchSubmit = async (term, page) => {\n      if (!this.state.loading && term) {\n        this.setState({\n          loading: true,\n          term: term,\n          page: page\n        });\n\n        try {\n          const result = await axios.get('https://api.github.com/search/repositories', {\n            params: {\n              q: term,\n              page: page\n            },\n            auth: {\n              username: 'ryanyang-pg',\n              password: '31eae963b5a63fa8cea3e79cdcf7fb7e4fbc31e7'\n            }\n          }); // {\n          //   \"message\": \"Only the first 1000 search results are available\",\n          //   \"documentation_url\": \"https://developer.github.com/v3/search/\"\n          // }\n\n          if (result.data) {\n            this.setState({\n              searchResults: result.data,\n              totalPages: result.data.total_count < 1000 ? Math.round(result.data.total_count / result.data.items.length) : Math.round(1000 / result.data.items.length)\n            });\n          }\n        } catch (e) {\n          alert('There is an error with Github API. Please try again later');\n        }\n\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"sm\",\n      position: \"relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SearchForm, {\n      onSubmit: this.onSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      loading: this.state.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(BasicPagination, {\n      page: this.state.page,\n      term: this.state.term,\n      totalPages: this.state.totalPages,\n      onSubmit: this.onSearchSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Box, {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      p: \"20\",\n      variant: \"body2\",\n      color: \"textSecondary\",\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, 'Ryan Yang.  Booqed Challenge. ', new Date().getFullYear(), '.')), /*#__PURE__*/React.createElement(Spinner, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ryanyang/Repo/booqed-challenge/src/components/App.js"],"names":["React","SearchForm","SearchResults","BasicPagination","Spinner","axios","CssBaseline","Typography","Container","Box","App","Component","state","searchResults","page","term","totalPages","loading","onSearchSubmit","setState","result","get","params","q","auth","username","password","data","total_count","Math","round","items","length","e","alert","render","Date","getFullYear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport SearchForm from './SearchForm';\nimport SearchResults from './SearchResults';\nimport BasicPagination from './BasicPagination';\nimport Spinner from './Spinner';\nimport axios from 'axios';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\n\nclass App extends React.Component {\n\n  state = {\n    searchResults: [],\n    page: 1,\n    term: '',\n    totalPages: 0,\n    loading: false,\n  };\n\n  onSearchSubmit = async (term, page) => {\n\n    if (!this.state.loading && term) {\n      this.setState({\n        loading: true,\n        term: term,\n        page: page,\n      });\n\n      try {\n        const result = await axios.get('https://api.github.com/search/repositories', {\n          params: {\n            q: term,\n            page: page,\n          },\n          auth: {\n            username: 'ryanyang-pg',\n            password: '31eae963b5a63fa8cea3e79cdcf7fb7e4fbc31e7'\n          }\n        });\n        // {\n        //   \"message\": \"Only the first 1000 search results are available\",\n        //   \"documentation_url\": \"https://developer.github.com/v3/search/\"\n        // }\n        if (result.data) {\n          this.setState({\n            searchResults: result.data,\n            totalPages: (result.data.total_count < 1000) ? Math.round(result.data.total_count / result.data.items.length) : Math.round(1000 / result.data.items.length),\n          });\n        }\n      } catch (e) {\n        alert('There is an error with Github API. Please try again later');\n      }\n\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n  render() {\n    const { loading } = this.state;\n\n    return (\n      <Container component=\"main\" maxWidth=\"sm\" position=\"relative\">\n        <CssBaseline />\n        <SearchForm onSubmit={this.onSearchSubmit} />\n        <SearchResults searchResults={this.state.searchResults} loading={this.state.loading} />\n        <BasicPagination page={this.state.page} term={this.state.term} totalPages={this.state.totalPages} onSubmit={this.onSearchSubmit} />\n        <Box m={2}>\n          <Typography p=\"20\" variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Ryan Yang.  Booqed Challenge. '}{new Date().getFullYear()}{'.'}\n          </Typography>\n        </Box>\n        <Spinner loading={loading} />\n      </Container>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}