{"ast":null,"code":"var _jsxFileName = \"/Users/ryanyang/Repo/booqed/src/components/SearchResults.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom: 20\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  searchTotal: {\n    paddingBottom: '15px'\n  }\n});\n\nconst SearchResults = props => {\n  const classes = useStyles();\n  const bull = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 18\n    }\n  }, \"\\u2022\");\n  const results = props.searchResults; // console.log(results['total_count']);\n  // console.log(results['incomplete_results']);\n\n  if (results['items']) {\n    const stuff = results['items'].map(element => {\n      return /*#__PURE__*/React.createElement(Card, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        className: classes.title,\n        color: \"textSecondary\",\n        gutterBottom: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }, \"Word of the Day\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, element['full_name']), /*#__PURE__*/React.createElement(Typography, {\n        className: classes.pos,\n        color: \"textSecondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }\n      }, \"adjective\"), /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        component: \"p\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, \"well meaning and kindly.\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      }), '\"a benevolent smile\"')), /*#__PURE__*/React.createElement(CardActions, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }\n      }, \"Learn More\")));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.searchTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, results['total_count'], \" repositories found.\"), /*#__PURE__*/React.createElement(\"box\", {\n      m: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, stuff));\n  } // console.log();\n  // for (var i=0;i<results['items'].length; i++) {\n  //     console.log(results['items'][i]);\n  // }\n  // console.log(results['items']);\n  // console.log(results.items);\n  // const stuff = results['items'].map((row) => {\n  //     console.log(row);\n  //     return null;\n  // });\n\n\n  return null;\n};\n\nexport default SearchResults;","map":{"version":3,"sources":["/Users/ryanyang/Repo/booqed/src/components/SearchResults.js"],"names":["React","makeStyles","Card","CardActions","CardContent","Button","Typography","Box","useStyles","root","minWidth","marginBottom","bullet","display","margin","transform","title","fontSize","pos","searchTotal","paddingBottom","SearchResults","props","classes","bull","results","searchResults","stuff","map","element"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginBottom: 20,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  searchTotal: {    \n    paddingBottom: '15px',   \n  },\n});\n\nconst SearchResults = (props) => {\n\n    const classes = useStyles();\n    const bull = <span className={classes.bullet}>â€¢</span>;\n\n    const results = props.searchResults;\n    // console.log(results['total_count']);\n    // console.log(results['incomplete_results']);\n\n    if (results['items']) {\n        const stuff = results['items'].map(element => {\n\n            return (\n                <Card className={classes.root}>\n                    <CardContent>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Word of the Day\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                        {element['full_name']}\n                        </Typography>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                        adjective\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                        well meaning and kindly.\n                        <br />\n                        {'\"a benevolent smile\"'}\n                        </Typography>\n                    </CardContent>\n                    <CardActions>\n                        <Button size=\"small\">Learn More</Button>\n                    </CardActions>\n                </Card>\n            )\n        });\n\n        return (\n            <div>\n                <Typography className={classes.searchTotal}>\n                    {results['total_count']} repositories found.\n                </Typography>\n                <box m={2}>\n                    {stuff}\n                </box>\n               \n            </div>\n        );\n    }\n    // console.log();\n    // for (var i=0;i<results['items'].length; i++) {\n    //     console.log(results['items'][i]);\n    // }\n    // console.log(results['items']);\n    // console.log(results.items);\n    // const stuff = results['items'].map((row) => {\n    //     console.log(row);\n    //     return null;\n    // });\n\n    return null;\n};\n\nexport default SearchResults;"]},"metadata":{},"sourceType":"module"}